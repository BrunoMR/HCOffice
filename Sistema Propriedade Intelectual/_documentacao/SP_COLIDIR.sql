CREATE PROCEDURE [dbo].[SP_COLIDIR] (@NR_RPI INT, @LG_AFINIDADE BIT, @LG_COLIDIR BIT, @NO_PAGINA INT, @LG_SELECAO BIT) 
with encryption as 
BEGIN
   exec canrun

   IF (@LG_COLIDIR = 1)
   BEGIN

       DELETE colid.DBO.TB_COLIDENCIA
       WHERE NR_RPI = @NR_RPI
       AND LG_AFINIDADE = @LG_AFINIDADE;

   
   
   
   
       -- QUEBRAS DE MARCA
       WITH CLI AS 
       (
           -- TODO MUNDO QUE É MEU CLIENTE
           SELECT DISTINCT CP.CD_CLIENTE, C.NM_CLIENTE, P.CD_PROCESSO, P.NR_PROCESSO, P.NM_TITULAR, P.NR_INPI, P.DS_MARCA, P.DS_MORTO, P.DS_TRADUCAO, P.DS_TRADORTO, R.DS_QUEBRARAD
           , P.NR_CLSINT, P.NR_CLASSE1, P.NR_CLASSE2, P.NR_CLASSE3, P.DS_ESPECIFICACAO

           , V.MAX_RPI AS NR_RPI
           , V.MAX_DESPACHO AS NR_DESPACHO
           , P.NR_REFERENCIA
           , V.DT_DEPOSITO
           , V.DT_CONCESSAO
           , A.DS_APRESENTACAO
           , N.DS_NATUREZA
           , P.DS_APOSTILA

           FROM TB_PROCESSO AS P

           JOIN TB_CLIPRO AS CP ON CP.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_CLIENTE AS C ON C.CD_CLIENTE = CP.CD_CLIENTE

           JOIN TB_QUEBRARAD AS R ON R.CD_PROCESSO = P.CD_PROCESSO

           LEFT JOIN VW_PROCESSO AS V ON V.CD_PROCESSO = P.CD_PROCESSO
       
           LEFT JOIN TP_APRESENTACAO AS A ON A.TP_APRESENTACAO = P.TP_APRESENTACAO

           LEFT JOIN TP_NATUREZA AS N ON N.TP_NATUREZA = P.TP_NATUREZA
       ),

       PRO AS 
       (
           -- TODOS OS PROCESSO DA RPI X
           SELECT DISTINCT CP.CD_CLIENTE, L.NR_RPI, P.CD_PROCESSO, P.NR_PROCESSO, P.NM_TITULAR, P.NR_INPI, P.DS_MARCA, P.DS_MORTO, P.DS_TRADUCAO, P.DS_TRADORTO, R.DS_QUEBRARAD
           , P.NR_CLSINT, P.NR_CLASSE1, P.NR_CLASSE2, P.NR_CLASSE3, P.DS_ESPECIFICACAO

           , L.NR_DESPACHO
           , P.NR_REFERENCIA
           , V.DT_DEPOSITO
           , V.DT_CONCESSAO
           , A.DS_APRESENTACAO
           , N.DS_NATUREZA
           , P.DS_APOSTILA

           FROM TB_PROCESSO AS P

           LEFT JOIN TB_CLIPRO AS CP ON CP.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_PROLANC AS L ON L.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_QUEBRARAD AS R ON R.CD_PROCESSO = P.CD_PROCESSO

           LEFT JOIN VW_PROCESSO AS V ON V.CD_PROCESSO = P.CD_PROCESSO
       
           LEFT JOIN TP_APRESENTACAO AS A ON A.TP_APRESENTACAO = P.TP_APRESENTACAO

           LEFT JOIN TP_NATUREZA AS N ON N.TP_NATUREZA = P.TP_NATUREZA

           WHERE L.NR_RPI = @NR_RPI

           AND L.NR_DESPACHO IN ('003', '004', '400', '401', '403', '404', '405', '406', '450', '451', 'I009', 'I135', 'I158', 'I421')
       )

       INSERT INTO colid.DBO.TB_COLIDENCIA
       (
             NR_RPI
           , LG_AFINIDADE
           , CD_CLIENTE
           , NM_CLIENTE
           , CD_PROCESSO
           , NR_PROCESSO
           , NM_TITULAR
           , DS_MARCA
           , DS_MORTO
           , DS_TRADUCAO
           , DS_TRADORTO
           , NR_CLSINT
           , NR_CLASSE1
           , NR_CLASSE2
           , NR_CLASSE3
           , DS_ESPECIFICACAO

           , NR_DESPACHO
           , NR_REFERENCIA
           , DT_DEPOSITO
           , DT_CONCESSAO
           , DS_APRESENTACAO
           , DS_NATUREZA
           , DS_APOSTILA

           , X
           , CDPROCESSO
           , NRPROCESSO
           , NMTITULAR
           , DSMARCA
           , DSMORTO
           , DSTRADUCAO
           , DSTRADORTO
           , NRCLSINT
           , NRCLASSE1
           , NRCLASSE2
           , NRCLASSE3
           , DSESPECIFICACAO

           , NRRPI
           , NRDESPACHO
           , NRREFERENCIA
           , DTDEPOSITO
           , DTCONCESSAO
           , DSAPRESENTACAO
           , DSNATUREZA
           , DSAPOSTILA
       )

       SELECT DISTINCT 
             PRO.NR_RPI
           , CAST(@LG_AFINIDADE AS BIT) AS LG_AFINIDADE

           , CLI.CD_CLIENTE
           , CLI.NM_CLIENTE

           , CLI.CD_PROCESSO 
           , CLI.NR_PROCESSO
           , CLI.NM_TITULAR
           
           , CLI.DS_MARCA
           , CLI.DS_MORTO

           , CLI.DS_TRADUCAO
           , CLI.DS_TRADORTO

           , CLI.NR_CLSINT
           , CLI.NR_CLASSE1
           , CLI.NR_CLASSE2
           , CLI.NR_CLASSE3
           , CLI.DS_ESPECIFICACAO

           --, RIGHT('000' + CAST(CLI.NR_DESPACHO AS VARCHAR), 3) 
           , CLI.NR_DESPACHO

           , CLI.NR_REFERENCIA
           , CONVERT(VARCHAR, CLI.DT_DEPOSITO, 103)
           , CONVERT(VARCHAR, CLI.DT_CONCESSAO, 103)
           , CLI.DS_APRESENTACAO
           , CLI.DS_NATUREZA
           , CLI.DS_APOSTILA
           
           , CAST('1' AS BIT) AS X
           -- USAR PARA RASTREAR QUAL RADICAL FEZ A COLIDENCIA
           --, CLI.DS_RADICAL

           , PRO.CD_PROCESSO AS 'CDPROCESSO'
           , PRO.NR_PROCESSO AS 'NRPROCESSO'
           , PRO.NM_TITULAR AS 'NMTITULAR'
           
           , PRO.DS_MARCA AS 'DSMARCA'
           , PRO.DS_MORTO AS 'DSMORTO'

           , PRO.DS_TRADUCAO AS 'DSTRADUCAO'
           , PRO.DS_TRADORTO AS 'DSTRADORTO'
           
           , PRO.NR_CLSINT AS 'NRCLSINT'
           , PRO.NR_CLASSE1 AS 'NRCLASSE1'
           , PRO.NR_CLASSE2 AS 'NRCLASSE2'
           , PRO.NR_CLASSE3 AS 'NRCLASSE3'
           , PRO.DS_ESPECIFICACAO AS 'DSESPECIFICACAO'

           , PRO.NR_RPI AS 'NRRPI'
           --, RIGHT('000' + CAST(PRO.NR_DESPACHO AS VARCHAR), 3)
           , NRDESPACHO = PRO.NR_DESPACHO
           , PRO.NR_REFERENCIA AS 'NRREFERENCIA'
           , CONVERT(VARCHAR, PRO.DT_DEPOSITO, 103)
           , CONVERT(VARCHAR, PRO.DT_CONCESSAO, 103)
           , PRO.DS_APRESENTACAO
           , PRO.DS_NATUREZA
           , PRO.DS_APOSTILA

       FROM CLI

       --COLIDENCIA
       JOIN PRO ON PRO.DS_QUEBRARAD like  CLI.DS_QUEBRARAD

       --NÃO COLIDIR O PROCESSO CONTRA ELE MESMO
       AND PRO.CD_PROCESSO <> CLI.CD_PROCESSO

       --NÃO COLIDIR PROCESSOS DE MESMO CLIENTE
       AND COALESCE(PRO.CD_CLIENTE, 0) <> COALESCE(CLI.CD_CLIENTE, 0)

       LEFT JOIN COLID.DBO.TB_COLIDENCIA R ON R.NR_RPI = PRO.NR_RPI
       AND R.LG_AFINIDADE = @LG_AFINIDADE
       AND R.CD_PROCESSO = CLI.CD_PROCESSO
       AND R.CDPROCESSO = PRO.CD_PROCESSO

       WHERE R.NR_RPI IS NULL;






































       PRINT 'STAGE: RADICAIS';
       --RADICAIS
       WITH CLI AS 
       (
           -- TODO MUNDO QUE É MEU CLIENTE
           SELECT DISTINCT CP.CD_CLIENTE, C.NM_CLIENTE, P.CD_PROCESSO, P.NR_PROCESSO, P.NM_TITULAR, P.NR_INPI, P.DS_MARCA, P.DS_MORTO, P.DS_TRADUCAO, P.DS_TRADORTO, R.DS_RADICAL, R.LG_PREFIXO, R.LG_SUFIXO, R.VL_ORDEM
           , P.NR_CLSINT, P.NR_CLASSE1, P.NR_CLASSE2, P.NR_CLASSE3, P.DS_ESPECIFICACAO

           , V.MAX_RPI AS NR_RPI
           , V.MAX_DESPACHO AS NR_DESPACHO
           , P.NR_REFERENCIA
           , V.DT_DEPOSITO
           , V.DT_CONCESSAO
           , A.DS_APRESENTACAO
           , N.DS_NATUREZA
           , P.DS_APOSTILA

           , R.TAMANHO
           , P.TM

           FROM TB_PROCESSO AS P

           JOIN TB_CLIPRO AS CP ON CP.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_CLIENTE AS C ON C.CD_CLIENTE = CP.CD_CLIENTE

           JOIN TB_RADICAL AS R ON R.CD_PROCESSO = P.CD_PROCESSO

           LEFT JOIN VW_PROCESSO AS V ON V.CD_PROCESSO = P.CD_PROCESSO
       
           LEFT JOIN TP_APRESENTACAO AS A ON A.TP_APRESENTACAO = P.TP_APRESENTACAO

           LEFT JOIN TP_NATUREZA AS N ON N.TP_NATUREZA = P.TP_NATUREZA
       ),

       PRO AS 
       (
           -- TODOS OS PROCESSO DA RPI X
           SELECT DISTINCT CP.CD_CLIENTE, L.NR_RPI, P.CD_PROCESSO, P.NR_PROCESSO, P.NM_TITULAR, P.NR_INPI, P.DS_MARCA, P.DS_MORTO, P.DS_TRADUCAO, P.DS_TRADORTO, R.DS_RADICAL, R.LG_PREFIXO, R.LG_SUFIXO, R.VL_ORDEM
           , P.NR_CLSINT, P.NR_CLASSE1, P.NR_CLASSE2, P.NR_CLASSE3, P.DS_ESPECIFICACAO

           , L.NR_DESPACHO
           , P.NR_REFERENCIA
           , V.DT_DEPOSITO
           , V.DT_CONCESSAO
           , A.DS_APRESENTACAO
           , N.DS_NATUREZA
           , P.DS_APOSTILA

           , R.TAMANHO
           , P.TM

           FROM TB_PROCESSO AS P

           LEFT JOIN TB_CLIPRO AS CP ON CP.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_PROLANC AS L ON L.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_RADICAL AS R ON R.CD_PROCESSO = P.CD_PROCESSO

           LEFT JOIN VW_PROCESSO AS V ON V.CD_PROCESSO = P.CD_PROCESSO
       
           LEFT JOIN TP_APRESENTACAO AS A ON A.TP_APRESENTACAO = P.TP_APRESENTACAO

           LEFT JOIN TP_NATUREZA AS N ON N.TP_NATUREZA = P.TP_NATUREZA

           WHERE L.NR_RPI = @NR_RPI

           AND L.NR_DESPACHO IN ('003', '004', '400', '401', '403', '404', '405', '406', '450', '451', 'I009', 'I135', 'I158', 'I421')
       )

       INSERT INTO colid.DBO.TB_COLIDENCIA
       (
             NR_RPI
           , LG_AFINIDADE
           , CD_CLIENTE
           , NM_CLIENTE
           , CD_PROCESSO
           , NR_PROCESSO
           , NM_TITULAR
           , DS_MARCA
           , DS_MORTO
           , DS_TRADUCAO
           , DS_TRADORTO
           , NR_CLSINT
           , NR_CLASSE1
           , NR_CLASSE2
           , NR_CLASSE3
           , DS_ESPECIFICACAO

           , NR_DESPACHO
           , NR_REFERENCIA
           , DT_DEPOSITO
           , DT_CONCESSAO
           , DS_APRESENTACAO
           , DS_NATUREZA
           , DS_APOSTILA

           , X
           , CDPROCESSO
           , NRPROCESSO
           , NMTITULAR
           , DSMARCA
           , DSMORTO
           , DSTRADUCAO
           , DSTRADORTO
           , NRCLSINT
           , NRCLASSE1
           , NRCLASSE2
           , NRCLASSE3
           , DSESPECIFICACAO

           , NRRPI
           , NRDESPACHO
           , NRREFERENCIA
           , DTDEPOSITO
           , DTCONCESSAO
           , DSAPRESENTACAO
           , DSNATUREZA
           , DSAPOSTILA
       )

       SELECT DISTINCT 
             PRO.NR_RPI
           , CAST(@LG_AFINIDADE AS BIT) AS LG_AFINIDADE

           , CLI.CD_CLIENTE
           , CLI.NM_CLIENTE

           , CLI.CD_PROCESSO 
           , CLI.NR_PROCESSO
           , CLI.NM_TITULAR
           
           , CLI.DS_MARCA
           , CLI.DS_MORTO

           , CLI.DS_TRADUCAO
           , CLI.DS_TRADORTO

           , CLI.NR_CLSINT
           , CLI.NR_CLASSE1
           , CLI.NR_CLASSE2
           , CLI.NR_CLASSE3
           , CLI.DS_ESPECIFICACAO
           
           --, RIGHT('000' + CAST(CLI.NR_DESPACHO AS VARCHAR), 3) 
           , CLI.NR_DESPACHO
           , CLI.NR_REFERENCIA
           , CONVERT(VARCHAR, CLI.DT_DEPOSITO, 103)
           , CONVERT(VARCHAR, CLI.DT_CONCESSAO, 103)
           , CLI.DS_APRESENTACAO
           , CLI.DS_NATUREZA
           , CLI.DS_APOSTILA

           , CAST('0' AS BIT) AS X
           -- USAR PARA RASTREAR QUAL RADICAL FEZ A COLIDENCIA
           --, CLI.DS_RADICAL

           , PRO.CD_PROCESSO AS 'CDPROCESSO'
           , PRO.NR_PROCESSO AS 'NRPROCESSO'
           , PRO.NM_TITULAR AS 'NMTITULAR'
           
           , PRO.DS_MARCA AS 'DSMARCA'
           , PRO.DS_MORTO AS 'DSMORTO'

           , PRO.DS_TRADUCAO AS 'DSTRADUCAO'
           , PRO.DS_TRADORTO AS 'DSTRADORTO'
           
           , PRO.NR_CLSINT AS 'NRCLSINT'
           , PRO.NR_CLASSE1 AS 'NRCLASSE1'
           , PRO.NR_CLASSE2 AS 'NRCLASSE2'
           , PRO.NR_CLASSE3 AS 'NRCLASSE3'
           , PRO.DS_ESPECIFICACAO AS 'DSESPECIFICACAO'

           , PRO.NR_RPI AS 'NRRPI'
           --, RIGHT('000' + CAST(PRO.NR_DESPACHO AS VARCHAR), 3)
           , NRDESPACHO = PRO.NR_DESPACHO
           , PRO.NR_REFERENCIA AS 'NRREFERENCIA'
           , CONVERT(VARCHAR, PRO.DT_DEPOSITO, 103)
           , CONVERT(VARCHAR, PRO.DT_CONCESSAO, 103)
           , PRO.DS_APRESENTACAO
           , PRO.DS_NATUREZA
           , PRO.DS_APOSTILA

       FROM CLI

       --COLIDENCIA
       JOIN PRO ON PRO.DS_RADICAL = CLI.DS_RADICAL
       AND PRO.TAMANHO = CLI.TAMANHO
       AND PRO.TAMANHO = CASE WHEN PRO.TM < CLI.TM THEN PRO.TM ELSE CLI.TM END

       -- PREFIXO SÓ COLIDE COM PREFIXO
       -- RADICAL SOMENTE COM RADICAL
       -- SUFIXO SOMENTE SUFIXO
       AND 
       ( 
           (PRO.LG_SUFIXO = 1 AND  CLI.LG_SUFIXO = 1)  -- SUFIXO COM SUFIXO
           OR
           (PRO.LG_SUFIXO = 0 AND  CLI.LG_SUFIXO = 0 AND PRO.LG_PREFIXO = 0 AND CLI.LG_PREFIXO = 0) -- OUTROS RADICAIS NORMAIS QUE NAO SAO NEM SUFIXOS E NEM PREFIXOS
           OR
           (PRO.LG_PREFIXO = 1 AND  CLI.LG_PREFIXO = 1)  -- PREFIXO COM PREFIXO
           --OR 
           --(PRO.LG_PREFIXO = 1 AND CLI.LG_SUFIXO = 1) -- PREFIXO C/ SUFIXO
           --OR 
           --(PRO.LG_SUFIXO = 1 AND CLI.LG_PREFIXO = 1) -- SUFIXO C/ PREFIXO
       )
       
   
       --NÃO COLIDIR O PROCESSO CONTRA ELE MESMO
       AND PRO.CD_PROCESSO <> CLI.CD_PROCESSO

       --NÃO COLIDIR PROCESSOS DE MESMO CLIENTE
       AND COALESCE(PRO.CD_CLIENTE, 0) <> COALESCE(CLI.CD_CLIENTE, 0)

--
--         É IMPORTANTE INFORMAR QUE PUNTO COLIDE COM UNO, MESMO QUE O DONO DAS MARCAS SEJA A PRÓPIA FIAT
--         AND PRO.NM_TITULAR <> CLI.NM_TITULAR
--         AND PRO.NR_INPI <> CLI.NR_INP
--
--         REMOVER ITENS JÁ INCLUSOS
--         NÃO É MAIS NECESSÁRIO, POIS AGORA SE LIMPA TUDO ANTES DE COLIDIR
--        LEFT JOIN colid.DBO.TB_COLIDENCIA AS COLID
--        ON COLID.NR_RPI = PRO.NR_RPI
--        AND COLID.LG_AFINIDADE = @LG_AFINIDADE
--        AND COLID.CD_PROCESSO = CLI.CD_PROCESSO
--        AND COLID.CDPROCESSO = PRO.CD_PROCESSO
--
--        REMOVER ITENS JÁ INCLUSOS
--        WHERE COLID.NR_RPI IS NULL --AND COLID.LG_AFINIDADE IS NULL AND COLID.CD_PROCESSO IS NULL AND COLID.CDPROCESSO IS NULL

       
       LEFT JOIN COLID.DBO.TB_COLIDENCIA R ON R.NR_RPI = PRO.NR_RPI
       AND R.LG_AFINIDADE = @LG_AFINIDADE
       AND R.CD_PROCESSO = CLI.CD_PROCESSO
       AND R.CDPROCESSO = PRO.CD_PROCESSO
           
       WHERE R.NR_RPI IS NULL


       --AFINIDADE
       AND
       (
           @LG_AFINIDADE = 0 OR
           (
               @LG_AFINIDADE = 1 AND
               (
                   CLI.NR_CLSINT = PRO.NR_CLSINT

                   OR CLI.NR_CLASSE1 = PRO.NR_CLASSE1
                   OR CLI.NR_CLASSE2 = PRO.NR_CLASSE1
                   OR CLI.NR_CLASSE3 = PRO.NR_CLASSE1

                   OR CLI.NR_CLASSE1 = PRO.NR_CLASSE2
                   OR CLI.NR_CLASSE2 = PRO.NR_CLASSE2
                   OR CLI.NR_CLASSE3 = PRO.NR_CLASSE2

                   OR CLI.NR_CLASSE1 = PRO.NR_CLASSE3
                   OR CLI.NR_CLASSE2 = PRO.NR_CLASSE3
                   OR CLI.NR_CLASSE3 = PRO.NR_CLASSE3




                   OR CLI.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLSINT )
                   OR CLI.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLSINT )
                   OR CLI.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLSINT )
                   OR CLI.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLSINT )

                   OR CLI.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE1 )
                   OR CLI.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE1 )
                   OR CLI.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE1 )
                   OR CLI.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE1 )

                   OR CLI.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE2 )
                   OR CLI.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE2 )
                   OR CLI.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE2 )
                   OR CLI.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE2 )

                   OR CLI.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE3 )
                   OR CLI.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE3 )
                   OR CLI.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE3 )
                   OR CLI.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = PRO.NR_CLASSE3 )






                   OR PRO.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLSINT )
                   OR PRO.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLSINT )
                   OR PRO.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLSINT )
                   OR PRO.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLSINT )

                   OR PRO.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE1 )
                   OR PRO.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE1 )
                   OR PRO.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE1 )
                   OR PRO.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE1 )

                   OR PRO.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE2 )
                   OR PRO.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE2 )
                   OR PRO.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE2 )
                   OR PRO.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE2 )

                   OR PRO.NR_CLSINT IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE3 )
                   OR PRO.NR_CLASSE1 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE3 )
                   OR PRO.NR_CLASSE2 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE3 )
                   OR PRO.NR_CLASSE3 IN ( SELECT NR_CLASSEB FROM TB_AFICLS WHERE NR_CLASSEA = CLI.NR_CLASSE3 )

               )
           )
       );



















       PRINT('STAGE: QUEBBA CONS');
       -- QUEBRA CONS
       WITH CLI AS 
       (
           -- TODO MUNDO QUE É MEU CLIENTE
           SELECT DISTINCT CP.CD_CLIENTE, C.NM_CLIENTE, P.CD_PROCESSO, P.NR_PROCESSO, P.NM_TITULAR, P.NR_INPI, P.DS_MARCA, P.DS_MORTO, P.DS_TRADUCAO, P.DS_TRADORTO, R.DS_QUEBRACONS
           , P.NR_CLSINT, P.NR_CLASSE1, P.NR_CLASSE2, P.NR_CLASSE3, P.DS_ESPECIFICACAO

           , V.MAX_RPI AS NR_RPI
           , V.MAX_DESPACHO AS NR_DESPACHO
           , P.NR_REFERENCIA
           , V.DT_DEPOSITO
           , V.DT_CONCESSAO
           , A.DS_APRESENTACAO
           , N.DS_NATUREZA
           , P.DS_APOSTILA

           FROM TB_PROCESSO AS P

           JOIN TB_CLIPRO AS CP ON CP.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_CLIENTE AS C ON C.CD_CLIENTE = CP.CD_CLIENTE

           JOIN TB_QUEBRACONS AS R ON R.CD_PROCESSO = P.CD_PROCESSO

           LEFT JOIN VW_PROCESSO AS V ON V.CD_PROCESSO = P.CD_PROCESSO
       
           LEFT JOIN TP_APRESENTACAO AS A ON A.TP_APRESENTACAO = P.TP_APRESENTACAO

           LEFT JOIN TP_NATUREZA AS N ON N.TP_NATUREZA = P.TP_NATUREZA
       ),

       PRO AS 
       (
           -- TODOS OS PROCESSO DA RPI X
           SELECT DISTINCT CP.CD_CLIENTE, L.NR_RPI, P.CD_PROCESSO, P.NR_PROCESSO, P.NM_TITULAR, P.NR_INPI, P.DS_MARCA, P.DS_MORTO, P.DS_TRADUCAO, P.DS_TRADORTO, R.DS_QUEBRACONS
           , P.NR_CLSINT, P.NR_CLASSE1, P.NR_CLASSE2, P.NR_CLASSE3, P.DS_ESPECIFICACAO

           , L.NR_DESPACHO
           , P.NR_REFERENCIA
           , V.DT_DEPOSITO
           , V.DT_CONCESSAO
           , A.DS_APRESENTACAO
           , N.DS_NATUREZA
           , P.DS_APOSTILA

           FROM TB_PROCESSO AS P

           LEFT JOIN TB_CLIPRO AS CP ON CP.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_PROLANC AS L ON L.CD_PROCESSO = P.CD_PROCESSO

           JOIN TB_QUEBRACONS AS R ON R.CD_PROCESSO = P.CD_PROCESSO

           LEFT JOIN VW_PROCESSO AS V ON V.CD_PROCESSO = P.CD_PROCESSO
       
           LEFT JOIN TP_APRESENTACAO AS A ON A.TP_APRESENTACAO = P.TP_APRESENTACAO

           LEFT JOIN TP_NATUREZA AS N ON N.TP_NATUREZA = P.TP_NATUREZA

           WHERE L.NR_RPI = @NR_RPI

           AND L.NR_DESPACHO IN ('003', '004', '400', '401', '403', '404', '405', '406', '450', '451', 'I009', 'I135', 'I158', 'I421')
       )

       INSERT INTO colid.DBO.TB_COLIDENCIA
       (
             NR_RPI
           , LG_AFINIDADE
           , CD_CLIENTE
           , NM_CLIENTE
           , CD_PROCESSO
           , NR_PROCESSO
           , NM_TITULAR
           , DS_MARCA
           , DS_MORTO
           , DS_TRADUCAO
           , DS_TRADORTO
           , NR_CLSINT
           , NR_CLASSE1
           , NR_CLASSE2
           , NR_CLASSE3
           , DS_ESPECIFICACAO

           , NR_DESPACHO
           , NR_REFERENCIA
           , DT_DEPOSITO
           , DT_CONCESSAO
           , DS_APRESENTACAO
           , DS_NATUREZA
           , DS_APOSTILA

           , X
           , CDPROCESSO
           , NRPROCESSO
           , NMTITULAR
           , DSMARCA
           , DSMORTO
           , DSTRADUCAO
           , DSTRADORTO
           , NRCLSINT
           , NRCLASSE1
           , NRCLASSE2
           , NRCLASSE3
           , DSESPECIFICACAO

           , NRRPI
           , NRDESPACHO
           , NRREFERENCIA
           , DTDEPOSITO
           , DTCONCESSAO
           , DSAPRESENTACAO
           , DSNATUREZA
           , DSAPOSTILA
       )

       SELECT DISTINCT 
             PRO.NR_RPI
           , CAST(@LG_AFINIDADE AS BIT) AS LG_AFINIDADE

           , CLI.CD_CLIENTE
           , CLI.NM_CLIENTE

           , CLI.CD_PROCESSO 
           , CLI.NR_PROCESSO
           , CLI.NM_TITULAR
           
           , CLI.DS_MARCA
           , CLI.DS_MORTO

           , CLI.DS_TRADUCAO
           , CLI.DS_TRADORTO

           , CLI.NR_CLSINT
           , CLI.NR_CLASSE1
           , CLI.NR_CLASSE2
           , CLI.NR_CLASSE3
           , CLI.DS_ESPECIFICACAO
                       
           --, RIGHT('000' + CAST(CLI.NR_DESPACHO AS VARCHAR), 3) 
           , CLI.NR_DESPACHO
           , CLI.NR_REFERENCIA
           , CONVERT(VARCHAR, CLI.DT_DEPOSITO, 103)
           , CONVERT(VARCHAR, CLI.DT_CONCESSAO, 103)
           , CLI.DS_APRESENTACAO
           , CLI.DS_NATUREZA
           , CLI.DS_APOSTILA

           , CAST('1' AS BIT) AS X
           -- USAR PARA RASTREAR QUAL RADICAL FEZ A COLIDENCIA
           --, CLI.DS_RADICAL

           , PRO.CD_PROCESSO AS 'CDPROCESSO'
           , PRO.NR_PROCESSO AS 'NRPROCESSO'
           , PRO.NM_TITULAR AS 'NMTITULAR'
           
           , PRO.DS_MARCA AS 'DSMARCA'
           , PRO.DS_MORTO AS 'DSMORTO'

           , PRO.DS_TRADUCAO AS 'DSTRADUCAO'
           , PRO.DS_TRADORTO AS 'DSTRADORTO'
           
           , PRO.NR_CLSINT AS 'NRCLSINT'
           , PRO.NR_CLASSE1 AS 'NRCLASSE1'
           , PRO.NR_CLASSE2 AS 'NRCLASSE2'
           , PRO.NR_CLASSE3 AS 'NRCLASSE3'
           , PRO.DS_ESPECIFICACAO AS 'DSESPECIFICACAO'

           , PRO.NR_RPI AS 'NRRPI'
           --, RIGHT('000' + CAST(PRO.NR_DESPACHO AS VARCHAR), 3)
           , NRDESPACHO = PRO.NR_DESPACHO
           , PRO.NR_REFERENCIA AS 'NRREFERENCIA'
           , CONVERT(VARCHAR, PRO.DT_DEPOSITO, 103)
           , CONVERT(VARCHAR, PRO.DT_CONCESSAO, 103)
           , PRO.DS_APRESENTACAO
           , PRO.DS_NATUREZA
           , PRO.DS_APOSTILA

       FROM CLI

       --COLIDENCIA
       JOIN PRO ON PRO.DS_QUEBRACONS = CLI.DS_QUEBRACONS

       --NÃO COLIDIR O PROCESSO CONTRA ELE MESMO
       AND PRO.CD_PROCESSO <> CLI.CD_PROCESSO

       --NÃO COLIDIR PROCESSOS DE MESMO CLIENTE
       AND COALESCE(PRO.CD_CLIENTE, 0) <> COALESCE(CLI.CD_CLIENTE, 0)

       LEFT JOIN COLID.DBO.TB_COLIDENCIA R ON R.NR_RPI = PRO.NR_RPI
       AND R.LG_AFINIDADE = @LG_AFINIDADE
       AND R.CD_PROCESSO = CLI.CD_PROCESSO
       AND R.CDPROCESSO = PRO.CD_PROCESSO

       WHERE R.NR_RPI IS NULL


       
   END
   ELSE
   BEGIN

       SELECT TOP 14 
             NR_RPI
           , LG_AFINIDADE
           , CD_CLIENTE
           , NM_CLIENTE
           , CD_PROCESSO
           , NR_PROCESSO
           , NM_TITULAR
           , DS_MARCA
           , DS_MORTO
           , DS_TRADUCAO
           , DS_TRADORTO
           , NR_CLSINT
           , NR_CLASSE1
           , NR_CLASSE2
           , NR_CLASSE3
           , DS_ESPECIFICACAO
           , X
           , CDPROCESSO
           , NRPROCESSO
           , NMTITULAR
           , DSMARCA
           , DSMORTO
           , DSTRADUCAO
           , DSTRADORTO
           , NRCLSINT
           , NRCLASSE1
           , NRCLASSE2
           , NRCLASSE3
           , DSESPECIFICACAO
           , DT_REGISTRO
           , CD_USUARIO

       FROM colid.DBO.TB_COLIDENCIA 

       WHERE NR_RPI = @NR_RPI 

       AND LG_AFINIDADE = @LG_AFINIDADE

       AND X = COALESCE(@LG_SELECAO, X)

       AND CD_PROCESSO NOT IN
       (
           SELECT TOP (14 * @NO_PAGINA - 14) CD_PROCESSO
           FROM colid.DBO.TB_COLIDENCIA 
           WHERE NR_RPI = @NR_RPI AND LG_AFINIDADE = @LG_AFINIDADE
       );

   END
END
GO